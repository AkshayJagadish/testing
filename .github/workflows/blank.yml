# This is a bas    gfic workfjjlow to    help you get started with Actions

name: CI




# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  push:
    branches: [ master, AJ ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
     

     
    
       
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it 
      - uses: actions/checkout@v2


      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
        

          
  
      - name: Set flag
        id: times
        run: echo ::set-output name=flag::ll
        
      - name: adding commit file
        run: |

          for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format="%ci %cr" $branch | head -n 1` \\t$branch; done | sort -r | grep origin/master
          TIMESTAMP=$(date +'%Y-%m-%d')
          echo $GITHUB_SHA
          echo $TIMESTAMP
          echo Date=$TIMESTAMP > test/commit.properties
          echo commitId=$GITHUB_SHA >> test/commit.properties
          echo projectVersion=$MVN_VERSION>> test/commit.properties
          cp test/commit.properties commit2.properties
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo $VERSION
          ls $GITHUB_WORKSPACE
          
        env:
          MVN_VERSION: 0.0.1-SNAPSHOT  


      - name: Create file
        uses: finnp/create-file-action@master
        env:
          FILE_NAME: example.md
          FILE_DATA: This is an example          
          
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        id: commit
        run: |
          
          echo $GITHUB_SHA
          echo Add other actions to build,
          echo test, and deploy your project.
          TIMESTAMP1=true
          echo $TIMESTAMP1
          ls
          
          
    
